/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.view;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.model.Conexao;
import org.model.Livro;

/**
 *
 * @author otto
 */
public class EdxLivros extends javax.swing.JFrame {

    /**
     * Creates new form EdxLivros
     */
    public void listarLivros() {
        try {
            String tipo;
            DefaultTableModel modelo = new DefaultTableModel();
            jtLivros.setModel(modelo);
            modelo.setRowCount(0);
            modelo.addColumn("ID");
            modelo.addColumn("Titulo");
            modelo.addColumn("Autor");
            modelo.addColumn("Tema");
            modelo.addColumn("Edição");
            modelo.addColumn("Local");
            modelo.addColumn("Editora");
            modelo.addColumn("Ano");
            modelo.addColumn("Páginas");

            Connection conexao = org.model.Conexao.getConexao();
            switch (String.valueOf(jcbFiltro.getSelectedItem())) { // Inserindo baseado no tipo
                case "Disponível":

                    ArrayList<Livro> livros = Livro.listar(conexao, "1");

                    for (Livro livro : livros) {

                        modelo.addRow(new Object[]{livro.getId(), livro.getTitulo(), livro.getAutor(), livro.getTema(), livro.getEdicao(), livro.getLocal(), livro.getEditora(), livro.getAno(), livro.getPagtotais()});
                    }
                    org.model.Conexao.closeAll(conexao);
                    break;
                case "Indisponível":

                    ArrayList<Livro> l = Livro.listar(conexao, "0");

                    for (Livro livro : l) {
                        if ("1".equals(livro.getLivre())) {
                            tipo = "Disponível";
                        }
                        if ("0".equals(livro.getLivre())) {
                            tipo = "Indisponível";
                        }
                        modelo.addRow(new Object[]{livro.getId(), livro.getTitulo(), livro.getAutor(), livro.getTema(), livro.getEdicao(), livro.getLocal(), livro.getEditora(), livro.getAno(), livro.getPagtotais()});
                    }
                    org.model.Conexao.closeAll(conexao);
                    break;
                case "Todos":

                    ArrayList<Livro> l1 = Livro.listarTudo(conexao, "");

                    for (Livro livro : l1) {
                        if ("1".equals(livro.getLivre())) {
                            tipo = "Disponível";
                        }
                        if ("0".equals(livro.getLivre())) {
                            tipo = "Indisponível";
                        }
                        modelo.addRow(new Object[]{livro.getId(), livro.getTitulo(), livro.getAutor(), livro.getTema(), livro.getEdicao(), livro.getLocal(), livro.getEditora(), livro.getAno(), livro.getPagtotais()});
                    }
                    org.model.Conexao.closeAll(conexao);
                    break;
            }

        } catch (SQLException ex) {
            Logger.getLogger(Consulta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public EdxLivros() {
        initComponents();
        listarLivros();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtLivros = new javax.swing.JTable();
        jbExcluir = new javax.swing.JButton();
        jcbFiltro = new javax.swing.JComboBox();
        jbEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(52, 73, 93));

        jtLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtLivros);

        jbExcluir.setBackground(java.awt.Color.white);
        jbExcluir.setForeground(new java.awt.Color(52, 73, 93));
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jcbFiltro.setBackground(new java.awt.Color(52, 73, 93));
        jcbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponível", "Indisponível" }));
        jcbFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFiltroActionPerformed(evt);
            }
        });

        jbEditar.setBackground(java.awt.Color.white);
        jbEditar.setForeground(new java.awt.Color(52, 73, 93));
        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jbExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbEditar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jcbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbExcluir)
                    .addComponent(jbEditar))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private static int i;
    private static String t;
    private static String tm;
    private static String e;
    private static String l;
    private static String ed;
    private static String a;
    private static int p;
    private static String au;

    public static String getAu() {
        return au;
    }
    
    public static void setAu(String au) {
        EdxLivros.au = au;
    }

    public static int getI() {
        return i;
    }

    public static void setI(int i) {
        EdxLivros.i = i;
    }

    public static String getT() {
        return t;
    }

    public static void setT(String t) {
        EdxLivros.t = t;
    }

    public static String getTm() {
        return tm;
    }

    public static void setTm(String tm) {
        EdxLivros.tm = tm;
    }

    public static String getE() {
        return e;
    }

    public static void setE(String e) {
        EdxLivros.e = e;
    }

    public static String getL() {
        return l;
    }

    public static void setL(String l) {
        EdxLivros.l = l;
    }

    public static String getEd() {
        return ed;
    }

    public static void setEd(String ed) {
        EdxLivros.ed = ed;
    }

    public static String getA() {
        return a;
    }

    public static void setA(String a) {
        EdxLivros.a = a;
    }

    public static int getP() {
        return p;
    }

    public static void setP(int p) {
        EdxLivros.p = p;
    }

    

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        int linha = jtLivros.getSelectedRow();
        setI((int) jtLivros.getValueAt(linha, 0));
        setT((String) jtLivros.getValueAt(linha, 1));
        setAu((String) jtLivros.getValueAt(linha,2));
        setTm((String) jtLivros.getValueAt(linha, 3));
        setE((String) jtLivros.getValueAt(linha, 4));
        setL((String) jtLivros.getValueAt(linha, 5));
        setEd((String) jtLivros.getValueAt(linha, 6));
        setA((String) jtLivros.getValueAt(linha, 7));
        setP((int) jtLivros.getValueAt(linha, 8));
        new EditarLivro().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        try {
            Connection conexao = Conexao.getConexao();

            int id = (int) jtLivros.getValueAt(jtLivros.getSelectedRow(), 0);

            Livro livro = new Livro(id, "");
            livro.excluir(conexao);

        } catch (SQLException e) {
            Logger.getLogger(org.view.EdxLivros.class.getName()).log(Level.SEVERE, null, e);
            System.err.println("Joao culpado");
        }
        listarLivros();
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jcbFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFiltroActionPerformed
        listarLivros();        // TODO add your handling code here:
    }//GEN-LAST:event_jcbFiltroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EdxLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EdxLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EdxLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EdxLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EdxLivros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JComboBox jcbFiltro;
    private javax.swing.JTable jtLivros;
    // End of variables declaration//GEN-END:variables
}
